{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const STATUS = Object.freeze({\n  IDLE: 'idle',\n  ERROR: 'error',\n  LOADING: 'loading'\n  // PRODUCT_DETAILS_REQUEST,\n  // PRODUCT_DETAILS_SUCCESS,\n  // PRODUCT_DETAILS_FAIL,\n});\nconst UserSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    status: STATUS.ERROR,\n    userDetail: {},\n    userLogin: {}\n  },\n  reducers: {\n    getStatus(state, action) {\n      state.status = action.payload;\n    },\n    getUserDetail(state, action) {\n      state.userDetail = action.payload;\n    },\n    getUserLogin(state, action) {\n      state.userLogin = action.payload;\n    }\n  }\n});\nexport default UserSlice.reducer;\nexport const {\n  getStatus,\n  getUserDetail,\n  getUserLogin\n} = UserSlice.actions;\nexport function RegisterReducer(name, email, password) {\n  // console.log(\"slice\" , obj); \n  return async function RegisterThunk(dispatch, thunk) {\n    dispatch(getStatus(STATUS.LOADING));\n\n    // const config = { headers : { \"Content-Type\" : \"application/json\"}};\n    try {\n      //  console.log(\"slice\" , obj); \n\n      // const {data} = await axios.post(`/api/login`, { email , password} , config)\n      const {\n        data\n      } = await axios.post(`http://localhost:4000/api/register`, {\n        name,\n        email,\n        password\n      });\n      console.log(\"datad \", data);\n      dispatch(getStatus(STATUS.IDLE));\n      dispatch(getUserDetail(data));\n    } catch (error) {\n      dispatch(getStatus(STATUS.ERROR));\n    }\n  };\n}\n\n// login \n_c = RegisterReducer;\nexport function LoginReducer(email, password) {\n  // console.log(\"slice\" , obj); \n  return async function LoginThunk(dispatch, thunk) {\n    dispatch(getStatus(STATUS.LOADING));\n\n    // const config = { headers : { \"Content-Type\" : \"application/json\"}};\n    try {\n      //  console.log(\"slice\" , obj); \n\n      // const {data} = await axios.post(`/api/login`, { email , password} , config)\n      const {\n        data\n      } = await axios.post(`http://localhost:4000/api/login`, {\n        email,\n        password\n      });\n      console.log(\"datad \", data);\n      dispatch(getStatus(STATUS.IDLE));\n      dispatch(getUserLogin(data));\n    } catch (error) {\n      dispatch(getStatus(STATUS.ERROR));\n    }\n  };\n}\n\n// http://192.168.1.3:3000 \n_c2 = LoginReducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterReducer\");\n$RefreshReg$(_c2, \"LoginReducer\");","map":{"version":3,"names":["createSlice","axios","STATUS","Object","freeze","IDLE","ERROR","LOADING","UserSlice","name","initialState","status","userDetail","userLogin","reducers","getStatus","state","action","payload","getUserDetail","getUserLogin","reducer","actions","RegisterReducer","email","password","RegisterThunk","dispatch","thunk","data","post","console","log","error","_c","LoginReducer","LoginThunk","_c2","$RefreshReg$"],"sources":["/Users/yogesh/Desktop/Code/MERN/Yogesh_Login/frontend/src/Store/Slice/UserSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nexport const STATUS = Object.freeze({\n    IDLE: 'idle',\n    ERROR: 'error',\n    LOADING: 'loading',\n    // PRODUCT_DETAILS_REQUEST,\n    // PRODUCT_DETAILS_SUCCESS,\n    // PRODUCT_DETAILS_FAIL,\n});\n\nconst UserSlice = createSlice({\n    name:\"user\",\n    initialState:{\n        status: STATUS.ERROR,\n        userDetail : {},\n        userLogin : {},\n    },\n    reducers:{\n        getStatus(state,action){\n            state.status = action.payload;\n        },\n        getUserDetail(state,action){\n            state.userDetail = action.payload\n        },\n        getUserLogin(state,action){\n            state.userLogin = action.payload\n        }\n\n\n    }\n})\n\nexport default UserSlice.reducer;\n\nexport const {getStatus , getUserDetail , getUserLogin } = UserSlice.actions\n\n\nexport function RegisterReducer(name , email , password){\n    // console.log(\"slice\" , obj); \n    return async function RegisterThunk(dispatch , thunk) {\n\n        dispatch(getStatus(STATUS.LOADING))\n\n        // const config = { headers : { \"Content-Type\" : \"application/json\"}};\n        try{\n\n            //  console.log(\"slice\" , obj); \n\n            \n            // const {data} = await axios.post(`/api/login`, { email , password} , config)\n            const {data} = await axios.post(`http://localhost:4000/api/register`, {name , email , password})\n            console.log(\"datad \", data)\n            dispatch(\n                getStatus(STATUS.IDLE),\n            )\n            dispatch(\n                getUserDetail(data),\n            )\n        }catch(error){\n            dispatch (getStatus(STATUS.ERROR))\n        }\n    }\n}\n\n\n\n\n// login \n\nexport function LoginReducer( email , password){\n    // console.log(\"slice\" , obj); \n    return async function LoginThunk(dispatch , thunk) {\n\n        dispatch(getStatus(STATUS.LOADING))\n\n        // const config = { headers : { \"Content-Type\" : \"application/json\"}};\n        try{\n\n            //  console.log(\"slice\" , obj); \n\n            \n            // const {data} = await axios.post(`/api/login`, { email , password} , config)\n            const {data} = await axios.post(`http://localhost:4000/api/login`, { email , password})\n            console.log(\"datad \", data)\n            dispatch(\n                getStatus(STATUS.IDLE),\n            )\n            dispatch(\n                getUserLogin(data),\n            )\n        }catch(error){\n            dispatch (getStatus(STATUS.ERROR))\n        }\n    }\n}\n\n\n// http://192.168.1.3:3000 "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}